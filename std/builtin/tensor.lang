// const tensor = @mlir_type("tensor<5xi64>");
//
// impl @mlir_type("tensor<5xi64>") {
//     fn index(self: Self, idx: i64) i64 {
//         const i = @mlir_op("index.castu", [idx], {}, [@mlir_type("index")]);
//         return @mlir_op("tensor.extract", [self, i], {}, [i64]);
//     }
// }

// fn tensor(comptime T: type, comptime size: i64) type {
//     impl @mlir_type("tensor<{}x{}>", [size, T]) {
//         fn index(self: Self, idx: i64) T {
//             const i = @mlir_op("index.castu", [idx], {}, [@mlir_type("index")]);
//             return @mlir_op("tensor.extract", [self, i], {}, [T]);
//         }
//     }
//     return tensor;
// }
