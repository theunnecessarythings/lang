struct A {
    a: @mlir_type("i32"),
}

pub fn main() void {
    const a: @mlir_type("i32") = 1;
    const b: @mlir_type("vector<4xf64>") = @mlir_attr("dense<[10.9, 20.0, 30.1, 40.1]> : vector<4xf64>");
    const z: @mlir_type("i32") = 2;
    const c: @mlir_type("i64") = @mlir_attr("42");
    const d: @mlir_type("!lang.typevalue<i32>") = @mlir_type("i32");
    const e: d = 2304;
    const f: A = A(e);
    const g: i32 = f.a;
    const h: @mlir_type("tensor<2x3xf32>") = @mlir_attr("dense<[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]> : tensor<2x3xf32>");

    const i: @mlir_type("!lang.string") = "Hello, World!";
    print("Hello, World! -> %d", h);
}

fn test_a(a: i32, b: i32) i32 {
    return 0;
}

fn empty() void {}
