enum Color {
    // These 3 are specified solely by their name.
    Red,
    Blue,
    Green,
    // These likewise tie `u32` tuples to different names: color models.
    RGB(u32, u32, u32),
    HSV(u32, u32, u32),
    HSL(u32, u32, u32),
    CMY(u32, u32, u32),
    CMYK(u32, u32, u32, u32),
}

fn main() void {
    const color = Color.RGB(122, 17, 40);
    // TODO ^ Try different variants for `color`

    print("What color is it?");
    // An `enum` can be destructured using a `match`.
    match color {
        is .Red   => print("The color is Red!"),
        is .Blue  => print("The color is Blue!"),
        is .Green => print("The color is Green!"),
        is .RGB(r, g, b) =>
            print("Red: {}, green: {}, and blue: {}!", r, g, b),
        is .HSV(h, s, v) =>
            print("Hue: {}, saturation: {}, value: {}!", h, s, v),
        is .HSL(h, s, l) =>
            print("Hue: {}, saturation: {}, lightness: {}!", h, s, l),
        is .CMY(c, m, y) =>
            print("Cyan: {}, magenta: {}, yellow: {}!", c, m, y),
        is .CMYK(c, m, y, k) =>
            print("Cyan: {}, magenta: {}, yellow: {}, key (black): {}!",
                c, m, y, k),
        // Don't need another arm because all variants have been examined
    }
}
